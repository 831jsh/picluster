#!/usr/bin/env bash
clear

# Test if jq is installed
if `type jq &>/dev/null`; then
  # Config file
  config="config-example.json"

  # Set config parameters to assign to variables
  config_token=`jq .token $config | sed -e 's/\"//g'`
  config_docker=`jq .docker $config | sed -e 's/\"//g'`
  config_server_port=`jq .server_port $config | sed -e 's/\"//g'`
  config_agent_port=`jq .agent_port $config | sed -e 's/\"//g'`
  config_ssl=`jq .ssl $config | sed -e 's/\"//g'`
  config_ssl_cert=`jq .ssl_cert $config | sed -e 's/\"//g'`
  config_ssl_key=`jq .ssl_key $config | sed -e 's/\"//g'`
  config_web_username=`jq .web_username $config | sed -e 's/\"//g'`
  config_web_password=`jq .web_password $config | sed -e 's/\"//g'`
  config_web_connect=`jq .web_connect $config | sed -e 's/\"//g'`
  config_web_port=`jq .web_port $config | sed -e 's/\"//g'`

  hb(){
    clear
    echo "Heartbeat is now checking....."
    curl -s $config_web_connect:$config_server_port/hb?token=$config_token
    logs
  }

  nodes(){
    clear
    echo "Active Nodes:"
    curl -s $config_web_connect:$config_server_port/nodes?token=$config_token
    logs
  }

  stop(){
    clear
    echo "Stopping the container(s)....."
    curl -s -G -d "token=$config_token&container=$1" http://$config_web_connect:$config_server_port/stop
    logs
  }

  images(){
    clear
    echo "Gathering a list of images....."
    curl -s  http://$config_web_connect:$config_server_port/images?token=$config_token
    logs
  }

  reloadconfig(){
    clear
    echo "Reloading the configuration...."
    curl -s http://$config_web_connect:$config_server_port/reloadconfig?token=$config_token
    logs
  }


  shell(){
    clear
    echo "Running the command....."
    curl -H "Content-Type: application/json" -X POST -d '{"command":"'"$1"'","token":"'"$config_token"'"}' http://$config_web_connect:$config_server_port/exec
    logs
  }

  clean(){
    clear
    echo "Cleaning stale Docker images and containers...."
    curl -s http://$config_web_connect:$config_server_port/prune?token=$config_token
    logs
  }

  build() {
    clear
    echo "Building the container(s) in the background. This may take a while. Continue to check the logs for progress."
    curl -s -G -d "token=$config_token&image=$1" http://$config_web_connect:$config_server_port/build
    logs
  }

  logs(){
    sleep 5
    clear
    echo "Checking the logs....."
    curl -s http://$config_web_connect:$config_server_port/log?token=$config_token
  }

  create() {
    clear
    echo "Running the container(s)....."
    curl -s -G -d "token=$config_token&container=$1" http://$config_web_connect:$config_server_port/create
    logs
  }

  start(){
    clear
    echo "Starting the container(s)....."
    curl -s -G -d "token=$config_token&container=$1" http://$config_web_connect:$config_server_port/start
    logs
  }

  restart(){
    clear
    echo "Restarting the container(s)....."
    curl -s -G -d "token=$config_token&container=$1" http://$config_web_connect:$config_server_port/restart
    logs
  }

  changehost(){
    clear
    echo "Changing the host....."
    curl -s -G -d "token=$config_token&newhost=$2&container=$1" http://$config_web_connect:$config_server_port/changehost
    logs
  }

  delete(){
    clear
    echo "Deleting the container(s)....."
    curl -s -G -d "token=$config_token&container=$1" http://$config_web_connect:$config_server_port/delete
    logs
  }

  status() {
    clear
    echo "Checking the status....."
    curl -s http://$config_web_connect:$config_server_port/status?token=$config_token
    logs
  }


  if [  -z "$1" ]; then
    echo "Error, no args specified!"
    echo
    arguments="build nodes reloadconfig images start create status exec start stop clean "
    echo "Valid arguments are: $arguments"
    echo
    exit
  fi;

  if [ "$1" = "hb" ]; then hb;exit; fi;
  if [ "$1" = "exec" ]; then shell "$2";exit; fi;
  if [ "$1" = "status" ]; then echo "Gathering Cluster Status....";status;exit; fi;
  if [ "$1" = "nodes" ]; then nodes;exit; fi;
  if [ "$1" = "clean" ]; then clean;exit; fi;
  if [ "$1" = "images" ]; then images;exit; fi;
  if [ "$1" = "reloadconfig" ]; then reloadconfig;exit; fi;
  if [ "$1" = "log" ]; then echo "Gathering Logs....";logs;exit; fi;
  if [ "$1" = "restart" ]; then restart "$2";exit; fi;
  if [ "$1" = "changehost" ]; then changehost "$2" "$3";exit; fi;
  if [ "$1" = "delete" ]; then delete "$2";exit; fi;
  if [ "$1" = "build" ]; then echo "Building Images....";build "$2"; fi;
  if [ "$1" = "start" ]; then echo "Running container(s)....";start "$2"; fi;
  if [ "$1" = "stop" ]; then echo "Stopping container(s)....";stop "$2"; fi;
  if [ "$1" = "create" ]; then echo "Creating container(s)....";create "$2"; fi;
else
  echo "Please install jq"
fi
